{"version":3,"sources":["components/Filter.js","services/Database.js","components/Notification.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["Filter","filtered","setFilter","value","onChange","event","target","db","database","add","personObject","persons","setPersons","setNotification","axios","post","then","response","concat","data","message","name","style","setTimeout","catch","error","get","remove","person","window","confirm","delete","_id","newPersons","filter","p","console","log","update","updatePerson","newNumber","number","updatedPersons","put","Notification","notification","margin","padding","color","background","borderRadius","PersonForm","useState","newName","setNewName","setNewNumber","onSubmit","preventDefault","currentList","map","find","includes","Database","updateEntry","type","Persons","filteredNames","toLowerCase","indexOf","onClick","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbc6002c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ filtered, setFilter }) => {\n\tconst updateFilter = (event) => {\n\t\tsetFilter(event.target.value);\n\t};\n\n\treturn (\n\t\t<p>\n\t\t\tfilter shown with: <input value={filtered} onChange={updateFilter} />\n\t\t</p>\n\t);\n};\n\nexport default Filter;\n","import axios from \"axios\";\nconst db = \"https://fso-part3-phonebook-server.herokuapp.com/api/persons\";\n\nconst add = (personObject, persons, setPersons, setNotification) => {\n\taxios\n\t\t.post(db, personObject)\n\t\t.then((response) => {\n\t\t\tsetPersons(persons.concat(response.data));\n\t\t\tsetNotification({\n\t\t\t\tmessage: `${personObject.name} was added`,\n\t\t\t\tstyle: \"good\",\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetNotification(null);\n\t\t\t}, 5000);\n\t\t})\n\t\t.catch((error) => {\n\t\t\tsetNotification({\n\t\t\t\tmessage: error.response.data.message,\n\t\t\t\tstyle: \"bad\",\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetNotification(null);\n\t\t\t}, 5000);\n\t\t});\n};\n\nconst get = (setPersons) =>\n\taxios.get(db).then((response) => {\n\t\tsetPersons(response.data);\n\t});\n\nconst remove = (person, persons, setPersons) => {\n\tif (window.confirm(`Delete ${person.name}?`)) {\n\t\taxios\n\t\t\t.delete(`${db}/${person._id}`)\n\t\t\t.then(() => {\n\t\t\t\tconst newPersons = persons.filter((p) => p._id !== person._id);\n\t\t\t\tsetPersons(newPersons);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(\"Could not delete\", error);\n\t\t\t});\n\t}\n};\n\nconst update = (\n\tupdatePerson,\n\tpersons,\n\tsetPersons,\n\tnewNumber,\n\tsetNotification\n) => {\n\tif (\n\t\twindow.confirm(\n\t\t\t`${updatePerson.name} is already in the phonebook, replace the old number with the new one?`\n\t\t)\n\t) {\n\t\tupdatePerson.number = newNumber;\n\t\tconst otherPersons = persons.filter((p) => p._id !== updatePerson._id);\n\t\tconst updatedPersons = otherPersons.concat(updatePerson);\n\t\taxios\n\t\t\t.put(`${db}/${updatePerson._id}`, updatePerson)\n\t\t\t.then(() => {\n\t\t\t\tsetPersons(updatedPersons);\n\t\t\t\tsetNotification({\n\t\t\t\t\tmessage: `${updatePerson.name} was updated`,\n\t\t\t\t\tstyle: \"good\",\n\t\t\t\t});\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetNotification(null);\n\t\t\t\t}, 5000);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetNotification({\n\t\t\t\t\tmessage: error.response.data.message,\n\t\t\t\t\tstyle: \"bad\",\n\t\t\t\t});\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetNotification(null);\n\t\t\t\t}, 5000);\n\t\t\t});\n\t}\n};\n\nconst database = {\n\tadd,\n\tget,\n\tremove,\n\tupdate,\n};\n\nexport default database;\n","import React from \"react\";\n\nconst Notification = ({ notification }) => {\n\tconst goodStyle = {\n\t\tmargin: \"1rem 0\",\n\t\tpadding: \".5rem 1rem\",\n\t\tcolor: \"white\",\n\t\tbackground: \"green\",\n\t\tborderRadius: \".25rem\",\n\t};\n\tconst badStyle = {\n\t\tmargin: \"1rem 0\",\n\t\tpadding: \".5rem 1rem\",\n\t\tcolor: \"white\",\n\t\tbackground: \"red\",\n\t\tborderRadius: \".25rem\",\n\t};\n\treturn notification === null ? null : (\n\t\t<div style={notification.style === \"good\" ? goodStyle : badStyle}>\n\t\t\t{notification.message}\n\t\t</div>\n\t);\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\nimport Database from \"../services/Database\";\nimport Notification from \"./Notification\";\n\nconst PersonForm = ({ persons, setPersons }) => {\n\tconst [newName, setNewName] = useState(\"\");\n\tconst [newNumber, setNewNumber] = useState(\"\");\n\tconst [notification, setNotification] = useState(null);\n\n\tconst updateName = (event) => {\n\t\tsetNewName(event.target.value);\n\t};\n\n\tconst personObject = {\n\t\tname: newName,\n\t\tnumber: newNumber,\n\t};\n\n\tconst updateNumber = (event) => {\n\t\tsetNewNumber(event.target.value);\n\t};\n\n\tconst addName = () => {\n\t\tDatabase.add(personObject, persons, setPersons, setNotification);\n\t\tsetNewName(\"\");\n\t\tsetNewNumber(\"\");\n\t};\n\n\tconst updateEntry = (updatePerson) => {\n\t\tDatabase.update(\n\t\t\tupdatePerson,\n\t\t\tpersons,\n\t\t\tsetPersons,\n\t\t\tnewNumber,\n\t\t\tsetNotification\n\t\t);\n\t\tsetNewName(\"\");\n\t\tsetNewNumber(\"\");\n\t};\n\n\tconst checkExists = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst currentList = persons.map((person) => person.name);\n\t\tconst updatePerson = persons.find((person) => person.name === newName);\n\n\t\tcurrentList.includes(newName) ? updateEntry(updatePerson) : addName();\n\t};\n\n\treturn (\n\t\t<form onSubmit={checkExists}>\n\t\t\t<div>\n\t\t\t\tname: <input value={newName} onChange={updateName} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tnumber: <input value={newNumber} onChange={updateNumber} />\n\t\t\t</div>\n\t\t\t<button type=\"submit\">add</button>\n\t\t\t<Notification notification={notification} />\n\t\t</form>\n\t);\n};\n\nexport default PersonForm;\n","import React from \"react\";\nimport Database from \"../services/Database\";\n\nconst Persons = ({ persons, filtered, setPersons, ...props }) => {\n\tconst filteredNames = persons.filter(\n\t\t(person) => person.name.toLowerCase().indexOf(filtered.toLowerCase()) !== -1\n\t);\n\treturn (\n\t\t<ul>\n\t\t\t{filteredNames.map((person) => (\n\t\t\t\t<li key={person._id}>\n\t\t\t\t\t{person.name} {person.number}\n\t\t\t\t\t<button onClick={() => Database.remove(person, persons, setPersons)}>\n\t\t\t\t\t\tDELETE\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default Persons;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Database from \"./services/Database\";\n\nconst App = () => {\n\tuseEffect(() => {\n\t\tDatabase.get(setPersons);\n\t}, []);\n\n\tconst [persons, setPersons] = useState([]);\n\n\tconst [filtered, setFilter] = useState(\"\");\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Filter filtered={filtered} setFilter={setFilter} />\n\t\t\t<h2>add a new</h2>\n\t\t\t<PersonForm persons={persons} setPersons={setPersons} />\n\t\t\t<h2>Numbers</h2>\n\t\t\t<Persons\n\t\t\t\tfiltered={filtered}\n\t\t\t\tsetFilter={setFilter}\n\t\t\t\tpersons={persons}\n\t\t\t\tsetPersons={setPersons}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}